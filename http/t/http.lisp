(in-package :http-test)

(deftest header-field ()
  (let ((header '(("a" . "1")
                  ("b" . "2")
                  ("A" . "3")
                  ("C" . "4"))))
    (check-equal "1" (http:header-field header "a"))
    (check-equal "2" (http:header-field header "B"))
    (check-equal "4" (http:header-field header "c"))
    (check-null (http:header-field header "d"))))

(deftest header-field-values ()
  (let ((header '(("a" . "1")
                  ("b" . "2")
                  ("A" . "3")
                  ("C" . "4"))))
    (check-equal '("1" "3") (http:header-field-values header "a"))
    (check-equal '("2") (http:header-field-values header "B"))
    (check-equal '("4") (http:header-field-values header "c"))
    (check-null (http:header-field-values header "d"))))

(deftest header-field-tokens ()
  (let ((header '(("a" . "1, 2,3")
                  ("b" . "4")
                  ("A" . "	5  ,  6  ")
                  ("C" . " 7	,	 8	"))))
    (check-equal '("1" "2" "3" "5" "6") (http:header-field-tokens header "a"))
    (check-equal '("4") (http:header-field-tokens header "B"))
    (check-equal '("7" "8") (http:header-field-tokens header "c"))
    (check-null (http:header-field-tokens header "d"))))

(deftest body-chunked-p ()
  (check-true (http::body-chunked-p '(("Transfer-Encoding" . "chunked"))))
  (check-true (http::body-chunked-p '(("Transfer-Encoding" . "gzip")
                                      ("Transfer-Encoding" . "chunked"))))
  (check-false (http::body-chunked-p '(("Transfer-Encoding" . "gzip"))))
  (check-false (http::body-chunked-p nil))
  (check-signals http:http-parse-error
                 (http::body-chunked-p '(("Transfer-Encoding" . "chunked")
                                         ("Transfer-Encoding" . "gzip")))))
