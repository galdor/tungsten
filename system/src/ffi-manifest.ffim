;;;
;;; Base
;;;

(type size-t "size_t")
(type ssize-t "ssize_t")

;;;
;;; Locales
;;;

(include "locale.h")

(type locale-t "locale_t")

;;;
;;; Errors
;;;

(include "errno.h")

;; See errno.h description in POSIX 2018.
(enum
 (errno :int)
 ((:e2big "E2BIG")
  (:eacces "EACCES")
  (:eaddrinuse "EADDRINUSE")
  (:eaddrnotavail "EADDRNOTAVAIL")
  (:eafnosupport "EAFNOSUPPORT")
  (:eagain "EAGAIN")
  (:ealready "EALREADY")
  (:ebadf "EBADF")
  (:ebadmsg "EBADMSG")
  (:ebusy "EBUSY")
  (:ecanceled "ECANCELED")
  (:echild "ECHILD")
  (:econnaborted "ECONNABORTED")
  (:econnrefused "ECONNREFUSED")
  (:econnreset "ECONNRESET")
  (:edeadlk "EDEADLK")
  (:edestaddrreq "EDESTADDRREQ")
  (:edom "EDOM")
  (:edquot "EDQUOT")
  (:eexist "EEXIST")
  (:efault "EFAULT")
  (:efbig "EFBIG")
  (:ehostunreach "EHOSTUNREACH")
  (:eidrm "EIDRM")
  (:eilseq "EILSEQ")
  (:einprogress "EINPROGRESS")
  (:eintr "EINTR")
  (:einval "EINVAL")
  (:eio "EIO")
  (:eisconn "EISCONN")
  (:eisdir "EISDIR")
  (:eloop "ELOOP")
  (:emfile "EMFILE")
  (:emlink "EMLINK")
  (:emsgsize "EMSGSIZE")
  (:emultihop "EMULTIHOP")
  (:enametoolong "ENAMETOOLONG")
  (:enetdown "ENETDOWN")
  (:enetreset "ENETRESET")
  (:enetunreach "ENETUNREACH")
  (:enfile "ENFILE")
  (:enobufs "ENOBUFS")
  (:enodata "ENODATA")
  (:enodev "ENODEV")
  (:enoent "ENOENT")
  (:enoexec "ENOEXEC")
  (:enolck "ENOLCK")
  (:enolink "ENOLINK")
  (:enomem "ENOMEM")
  (:enomsg "ENOMSG")
  (:enoprotoopt "ENOPROTOOPT")
  (:enospc "ENOSPC")
  (:enosr "ENOSR")
  (:enostr "ENOSTR")
  (:enosys "ENOSYS")
  (:enotconn "ENOTCONN")
  (:enotdir "ENOTDIR")
  (:enotempty "ENOTEMPTY")
  (:enotrecoverable "ENOTRECOVERABLE")
  (:enotsock "ENOTSOCK")
  (:enotsup "ENOTSUP")
  (:enotty "ENOTTY")
  (:enxio "ENXIO")
  (:eopnotsupp "EOPNOTSUPP")
  (:eoverflow "EOVERFLOW")
  (:eownerdead "EOWNERDEAD")
  (:eperm "EPERM")
  (:epipe "EPIPE")
  (:eproto "EPROTO")
  (:eprotonosupport "EPROTONOSUPPORT")
  (:eprototype "EPROTOTYPE")
  (:erange "ERANGE")
  (:erofs "EROFS")
  (:espipe "ESPIPE")
  (:esrch "ESRCH")
  (:estale "ESTALE")
  (:etime "ETIME")
  (:etimedout "ETIMEDOUT")
  (:etxtbsy "ETXTBSY")
  (:ewouldblock "EWOULDBLOCK")
  (:exdev "EXDEV")))

;;;
;;; Time
;;;

(include "sys/time.h")

(type time-t "time_t")
(type suseconds-t "suseconds_t")

(struct
 (timeval "struct timeval")
 ((:sec 'time-t "tv_sec")
  (:usec 'suseconds-t "tv_usec")))

;;
;; Sockets
;;

(include "netdb.h")
(include "netinet/in.h")
(include "sys/socket.h")

(type socklen-t "socklen_t")
(type sa-family-t "sa_family_t")
(type in-addr-t "in_addr_t")
(type in-port-t "in_port_t")

(enum
 (socket-type :int)
 ((:sock-dgram "SOCK_DGRAM")
  (:sock-raw "SOCK_RAW")
  (:sock-seqpacket "SOCK_SEQPACKET")
  (:sock-stream "SOCK_STREAM")))

(enum
 (socket-protocol :int)
 ((:ipproto-ip "IPPROTO_IP")
  (:ipproto-ipv6 "IPPROTO_IPV6")
  (:ipproto-icmp "IPPROTO_ICMP")
  (:ipproto-raw "IPPROTO_RAW")
  (:ipproto-tcp "IPPROTO_TCP")
  (:ipproto-udp "IPPROTO_UDP")))

(enum
 (socket-option-level :int)
 ((:sol-socket "SOL_SOCKET")))

(enum
 (socket-option :int)
 ((:so-reuseaddr "SO_REUSEADDR")
  (:so-keepalive "SO_KEEPALIVE")
  (:so-rcvtimeo "SO_RCVTIMEO")
  (:so-sndtimeo "SO_SNDTIMEO")))

(enum
 (address-family :int)
 ((:af-inet "AF_INET")
  (:af-inet6 "AF_INET6")
  (:af-unix "AF_UNIX")
  (:af-unspec "AF_UNSPEC")))

(enum
 (shutdown-type :int)
 ((:shut-rd "SHUT_RD")
  (:shut-wr "SHUT_WR")
  (:shut-rdwr "SHUT_RDWR")))

(struct
 (in-addr "struct in_addr")
 ((:s-addr 'in-addr-t "s_addr")))

(struct
 (sockaddr-in "struct sockaddr_in")
 ((:sin-family 'sa-family-t "sin_family")
  (:sin-port 'in-port-t "sin_port")
  (:sin-addr 'in-addr "sin_addr")))

(struct
 (in6-addr "struct in6_addr")
 ((:s6-addr :uint8 "s6_addr" :count 16)))

(struct
 (sockaddr-in6 "struct sockaddr_in6")
 ((:sin6-family 'sa-family-t "sin6_family")
  (:sin6-port 'in-port-t "sin6_port")
  (:sin6-flowinfo :uint32 "sin6_flowinfo")
  (:sin6-addr 'in6-addr "sin6_addr")
  (:sin6-scope-id ':uint32 "sin6_scope_id")))

(struct
 (sockaddr-storage "struct sockaddr_storage")
 ((:ss-family 'sa-family-t "ss_family")))

;;;
;;; DNS
;;;

(include "netdb.h")

(enum
 (ai-error :int)
 ((:eai-again "EAI_AGAIN")
  (:eai-badflags "EAI_BADFLAGS")
  (:eai-fail "EAI_FAIL")
  (:eai-family "EAI_FAMILY")
  (:eai-memory "EAI_MEMORY")
  (:eai-noname "EAI_NONAME")
  (:eai-service "EAI_SERVICE")
  (:eai-socktype "EAI_SOCKTYPE")
  (:eai-system "EAI_SYSTEM")
  (:eai-overflow "EAI_OVERFLOW")))

(bitset
 (ai-flags :int)
 ((:ai-passive "AI_PASSIVE")
  (:ai-canonname "AI_CANONNAME")
  (:ai-numerichost "AI_NUMERICHOST")
  (:ai-numericserv "AI_NUMERICSERV")
  (:ai-v4mapped "AI_V4MAPPED")
  (:ai-all "AI_ALL")
  (:ai-addrconfig "AI_ADDRCONFIG")))

(bitset
 (ni-flags :int)
 ((:ni-nofqdn "NI_NOFQDN")
  (:ni-numerichost "NI_NUMERICHOST")
  (:ni-namereqd "NI_NAMEREQD")
  (:ni-numericserv "NI_NUMERICSERV")
  (:ni-dgram "NI_DGRAM")))

(struct
 (addrinfo "struct addrinfo")
 ((:ai-flags 'ai-flags "ai_flags")
  (:ai-family 'address-family "ai_family")
  (:ai-socktype 'socket-type "ai_socktype")
  (:ai-protocol 'socket-protocol "ai_protocol")
  (:ai-addrlen 'socklen-t "ai_addrlen")
  (:ai-addr :pointer "ai_addr")
  (:ai-canonname :pointer "ai_canonname")
  (:ai-next :pointer "ai_next")))
