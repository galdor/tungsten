;;;
;;; Base
;;;

(type size-t "size_t")
(type ssize-t "ssize_t")

;;;
;;; Errors
;;;

(include "errno.h")

;; See errno.h description in POSIX 2018.
(enum
 (errno "int")
 ((:e2big "E2BIG")
  (:eacces "EACCES")
  (:eaddrinuse "EADDRINUSE")
  (:eaddrnotavail "EADDRNOTAVAIL")
  (:eafnosupport "EAFNOSUPPORT")
  (:eagain "EAGAIN")
  (:ealready "EALREADY")
  (:ebadf "EBADF")
  (:ebadmsg "EBADMSG")
  (:ebusy "EBUSY")
  (:ecanceled "ECANCELED")
  (:echild "ECHILD")
  (:econnaborted "ECONNABORTED")
  (:econnrefused "ECONNREFUSED")
  (:econnreset "ECONNRESET")
  (:edeadlk "EDEADLK")
  (:edestaddrreq "EDESTADDRREQ")
  (:edom "EDOM")
  (:edquot "EDQUOT")
  (:eexist "EEXIST")
  (:efault "EFAULT")
  (:efbig "EFBIG")
  (:ehostunreach "EHOSTUNREACH")
  (:eidrm "EIDRM")
  (:eilseq "EILSEQ")
  (:einprogress "EINPROGRESS")
  (:eintr "EINTR")
  (:einval "EINVAL")
  (:eio "EIO")
  (:eisconn "EISCONN")
  (:eisdir "EISDIR")
  (:eloop "ELOOP")
  (:emfile "EMFILE")
  (:emlink "EMLINK")
  (:emsgsize "EMSGSIZE")
  (:emultihop "EMULTIHOP")
  (:enametoolong "ENAMETOOLONG")
  (:enetdown "ENETDOWN")
  (:enetreset "ENETRESET")
  (:enetunreach "ENETUNREACH")
  (:enfile "ENFILE")
  (:enobufs "ENOBUFS")
  (:enodata "ENODATA")
  (:enodev "ENODEV")
  (:enoent "ENOENT")
  (:enoexec "ENOEXEC")
  (:enolck "ENOLCK")
  (:enolink "ENOLINK")
  (:enomem "ENOMEM")
  (:enomsg "ENOMSG")
  (:enoprotoopt "ENOPROTOOPT")
  (:enospc "ENOSPC")
  (:enosr "ENOSR")
  (:enostr "ENOSTR")
  (:enosys "ENOSYS")
  (:enotconn "ENOTCONN")
  (:enotdir "ENOTDIR")
  (:enotempty "ENOTEMPTY")
  (:enotrecoverable "ENOTRECOVERABLE")
  (:enotsock "ENOTSOCK")
  (:enotsup "ENOTSUP")
  (:enotty "ENOTTY")
  (:enxio "ENXIO")
  (:eopnotsupp "EOPNOTSUPP")
  (:eoverflow "EOVERFLOW")
  (:eownerdead "EOWNERDEAD")
  (:eperm "EPERM")
  (:epipe "EPIPE")
  (:eproto "EPROTO")
  (:eprotonosupport "EPROTONOSUPPORT")
  (:eprototype "EPROTOTYPE")
  (:erange "ERANGE")
  (:erofs "EROFS")
  (:espipe "ESPIPE")
  (:esrch "ESRCH")
  (:estale "ESTALE")
  (:etime "ETIME")
  (:etimedout "ETIMEDOUT")
  (:etxtbsy "ETXTBSY")
  (:ewouldblock "EWOULDBLOCK")
  (:exdev "EXDEV")))

;;;
;;; Time
;;;

(include "sys/time.h")

(type time-t "time_t")
(type suseconds-t "suseconds_t")

(struct
 (timeval "struct timeval")
 ((:sec 'time-t "tv_sec")
  (:usec 'suseconds-t "tv_usec")))
