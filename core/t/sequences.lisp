(in-package :core-test)

(deftest shuffle/array ()
  (let ((array (vector 0 1 2 3 4 5 6 7 8 9)))
    (dotimes (i 100)
      (let ((array2 (core:shuffle array)))
        (check= (length array) (length array2))
        (check-true (not (eq array array2)))
        (check-equalp array (sort array2 #'<))))))

(deftest shuffle/list ()
  (let ((list (list 0 1 2 3 4 5 6 7 8 9)))
    (dotimes (i 100)
      (let ((list2 (core:shuffle list)))
        (check= (length list) (length list2))
        (check-true (not (eq list list2)))
        (check-equalp list (sort list2 #'<))))))

(deftest nshuffle/array ()
  (let ((array (vector 0 1 2 3 4 5 6 7 8 9)))
    (dotimes (i 100)
      (let* ((array1 (copy-seq array))
             (array2 (core:nshuffle array1)))
        (check= (length array1) (length array2))
        (check-eq array1 array2)
        (check-equalp array (sort array2 #'<))))))

(deftest nshuffle/list ()
  (let ((list (list 0 1 2 3 4 5 6 7 8 9)))
    (dotimes (i 100)
      (let* ((list1 (copy-seq list))
             (list2 (core:nshuffle list1)))
        (check= (length list1) (length list2))
        (check-equalp list (sort list2 #'<))))))
